error_log /dev/stdout warn;
env SESSION_STORE_PORT_6379_TCP_ADDR;
env SESSION_STORE_PORT_6379_TCP_PORT;

events {
  worker_connections 1024;
}

http {
  lua_package_path '/lib/nginx-lua/?.lua';

  server {
    listen 80;

    location /hello {
      default_type 'text/plain';
      content_by_lua_block {
        ngx.say('Hello')
      }
    }

    location /count {
      default_type 'text/plain';
      content_by_lua_block {
        local redis = require 'redis'
        local r = redis:new()
        r:set_timeout(1000)

        local ok, err = r:connect(os.getenv('SESSION_STORE_PORT_6379_TCP_ADDR'), tonumber(os.getenv('SESSION_STORE_PORT_6379_TCP_PORT')))
        if not ok then
          ngx.say('connect error: ', err)
          return
        end

        local res, err = r:get('cnt')
        if not res then
          ngx.say('get error: ', err)
          return
        end

        local cnt = res and tonumber(res) or 1
        local ok, err = r:set('cnt', cnt + 1)
        if not ok then
          ngx.say('set error: ', err)
          return
        end

        ngx.say('cnt = ', cnt)
      }
    }
  }
}
